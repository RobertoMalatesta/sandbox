//
// JSONPrettyPrinter.cpp
//
// $Id: //poco/Main/Web/src/JSONPrettyPrinter.cpp#7 $
//
// Library: Web
// Package: Configuration
// Module:  JSONPrettyPrinter
//
// Copyright (c) 2004-2006, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#include "Poco/Web/JSONPrettyPrinter.h"


namespace Poco {
namespace Web {


JSONPrettyPrinter::JSONPrettyPrinter(std::ostream& out,
	Format format,
	const std::string& indent):
	JSONHandler(out),
	_format(format),
	_indent(indent)
{
}


JSONPrettyPrinter::~JSONPrettyPrinter()
{
}


void JSONPrettyPrinter::handleKey(const JSONEntity& val)
{
	indent();
	if (_format == JSON_FORMAT_RFC4627)
		stream() << "\"";

	stream() << val.toString();
	
	if (_format == JSON_FORMAT_RFC4627)
		stream() << '\'';

	stream() << ": ";

	setKey(true);
}


void JSONPrettyPrinter::handleString(const JSONEntity& val)
{
	if (!isKey()) indent();
	if (_format == JSON_FORMAT_RFC4627)
		stream() << "\"";
	else
		stream() << "'";

	stream() << val.toString();

	if (_format == JSON_FORMAT_RFC4627)
		stream() << "\"";
	else
		stream() << "'";

	setKey(false);
}


void JSONPrettyPrinter::indent()
{
	std::size_t i;
	std::size_t lev = level();

	for (i = 0; i < lev; ++i)
		stream() << _indent;
}


} } // namespace Poco::Web
