//
// JSONCondenser.h
//
// $Id: //poco/Main/Web/include/Poco/Web/JSONCondenser.h#2 $
//
// Library: Web
// Package: Configuration
// Module:  JSONCondenser
//
// Definition of the JSONCondenser class.
//
// Copyright (c) 2004-2006, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef Web_JSONCondenser_INCLUDED
#define Web_JSONCondenser_INCLUDED


#include "Poco/Web/Web.h"
#include "Poco/Web/JSONHandler.h"
#include "Poco/Web/JSONEntity.h"
#include <ostream>


namespace Poco {
namespace Web {


class Web_API JSONCondenser: public JSONHandler
	/// Class prints out "condensed" JSON string (with unnecessary whitespace removed).
{
public:
	JSONCondenser(std::ostream& out);
		/// Creates JSONCondenser.

	~JSONCondenser();
		/// Destroys JSONCondenser.

	virtual void handleArrayBegin();
		/// Handles the array begin event.

	virtual void handleArrayEnd();
		/// Handles the array end event.

	virtual void handleObjectBegin();
		/// Handles the object begin event.

	virtual void handleObjectEnd();
		/// Handles the object end event.

	virtual void handleValueSeparator();
		/// Handles the value separator (",") event.

	virtual void handleInteger(const JSONEntity& val);
		/// Handles the integer value event.

	virtual void handleFloat(const JSONEntity& val);
		/// Handles the float value event.

	virtual void handleNull();
		/// Handles the null value event.

	virtual void handleTrue();
		/// Handles the true value event.

	virtual void handleFalse();
		/// Handles the false value event.

	virtual void handleKey(const JSONEntity& val);
		/// Handles the key event.

	virtual void handleString(const JSONEntity& val);
		/// Handles the string value event.
};


//
// inlines
//
inline void JSONCondenser::handleArrayBegin()
{
	stream() << '[';
}


inline void JSONCondenser::handleArrayEnd()
{
	stream() << ']';
}


inline void JSONCondenser::handleObjectBegin()
{
	stream() << '{';
}


inline void JSONCondenser::handleObjectEnd()
{
	stream() << '}';
}


inline void JSONCondenser::handleValueSeparator()
{
	stream() << ',';
}


inline void JSONCondenser::handleInteger(const JSONEntity& val)
{
	stream() << val.toInteger();
}


inline void JSONCondenser::handleFloat(const JSONEntity& val)
{
	stream() << val.toFloat();
}


inline void JSONCondenser::handleNull()
{
	stream() << "null";
}


inline void JSONCondenser::handleTrue()
{
	stream() << "true";
}


inline void JSONCondenser::handleFalse()
{
	stream() << "false\n";
}


inline void JSONCondenser::handleKey(const JSONEntity& val)
{
	stream() << '"' << val.toString() << "\":";
}


inline void JSONCondenser::handleString(const JSONEntity& val)
{
	stream() << '"' << val.toString() << '"';
}


} } // namespace Poco::Web


#endif // Web_JSONCondenser_INCLUDED
