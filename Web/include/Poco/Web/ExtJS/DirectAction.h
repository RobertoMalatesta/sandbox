//
// DirectAction.h
//
// $Id: //poco/Main/Web/include/Poco/Web/DirectAction.h#2 $
//
// Library: Web
// Package: Configuration
// Module:  DirectAction
//
// Definition of the DirectAction class.
//
// Copyright (c) 2004-2006, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef Web_DirectAction_INCLUDED
#define Web_DirectAction_INCLUDED


#include "Poco/Web/Web.h"
#include "Poco/Web/ExtJS/DirectResponse.h"
#include "Poco/SharedPtr.h"
#include <iostream>
#include <vector>


namespace Poco {
namespace Web {
namespace ExtJS {


class Web_API DirectAction
	/// Ext.Direct RPC direct action wrapper.
	/// DirectAction is passed to DirectHandler as a parameter 
	/// at construction. Direct handler then assembles the list 
	/// of parameters during parsing and automatically calls the 
	/// DirectAction::invoke() member on parsing end event.
	/// 
	/// See http://extjs.com/products/extjs/direct.php for 
	/// Ext.Direct documentation.
{
public:
	typedef Poco::SharedPtr<DirectAction>   Ptr;
	typedef DirectResponse::ArrayType ArrayType;

	DirectAction(DirectResponse::Ptr pResponse);
		/// Creates DirectAction.

	virtual ~DirectAction();
		/// Destroys DirectAction.

	virtual void invoke(const std::string& method,
		const ArrayType* pArgs = 0) = 0;
		/// Invokes the method.

	DirectResponse& response();

private:
	DirectAction();

	DirectResponse::Ptr _pResponse;
};

//
// inlines
//
inline DirectResponse& DirectAction::response()
{
	return *_pResponse;
}


} } } // namespace Poco::Web::ExtJS


#endif // Web_DirectAction_INCLUDED
